buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

repositories {
    maven {
        name = 'Lomeli Repo'
        url = "http://lomeli12.net/maven/"
    }
}

def loadProperties(String sourceFileName) {
    def config = new Properties()
    def propFile = new File(sourceFileName)
    if (propFile.canRead()) {
        config.load(new FileInputStream(propFile))
        for (Map.Entry property in config) {
            ext[property.key] = property.value;
        }
    }
}

loadProperties 'build.properties'

group = "$group"
archivesBaseName = "$baseName"
version = "$releaseVersion"

minecraft {
    version = "$mcVersion-$mcfVersion"
    runDir = "run"
    mappings = "$mcpMapping"
}

dependencies {
    compile "net.lomeli:LomLib:$lomlibVersion:dev"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    exclude '**/xcf/**'

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
	appendix = "$mcVersion"
    classifier = "universal"
}

sourceJar {
    appendix = "$mcVersion"
    classifier = "src"
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    appendix = "$mcVersion"
    classifier = "dev"
}

tasks.withType(Zip) { task ->
    task.doLast {
        ant.checksum algorithm: 'MD5', file: it.archivePath
        ant.checksum algorithm: 'SHA1', file: it.archivePath
    }
}

build.dependsOn deobfJar
